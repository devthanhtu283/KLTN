package com.demo.entities;
// Generated Oct 5, 2024, 2:53:07 PM by Hibernate Tools 4.3.6.Final

import java.util.HashSet;
import java.util.Set;
import jakarta.persistence.*;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "jobs")
public class User implements java.io.Serializable {

	private Integer id;
	private String username;
	private String password;
	private int role;
	private Set<Testhistory> testhistories = new HashSet<Testhistory>(0);
	private Set<Test> tests = new HashSet<Test>(0);

	public User() {
	}

	public User(String username, String password, int role) {
		this.username = username;
		this.password = password;
		this.role = role;
	}

	public User(String username, String password, int role, Set<Testhistory> testhistories, Set<Test> tests) {
		this.username = username;
		this.password = password;
		this.role = role;
		this.testhistories = testhistories;
		this.tests = tests;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "username", nullable = false, length = 250)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 250)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "role", nullable = false)
	public int getRole() {
		return this.role;
	}

	public void setRole(int role) {
		this.role = role;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Testhistory> getTesthistories() {
		return this.testhistories;
	}

	public void setTesthistories(Set<Testhistory> testhistories) {
		this.testhistories = testhistories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Test> getTests() {
		return this.tests;
	}

	public void setTests(Set<Test> tests) {
		this.tests = tests;
	}

}
